/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 29 13:23:52 GMT 2020
 */

package org.ant_project_example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.ant_project_example.CharacterCounter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharacterCounter_ESTest extends CharacterCounter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("@_znODs");
      assertEquals(7, characterCounter0.getNumLetters());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("org.ant_project_example.CharacterCounter");
      assertEquals(4, characterCounter0.getNumOtherCharacters());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("Q7;n?=jZJ*#1$r95");
      assertEquals(4, characterCounter0.getNumDigits());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("M\"(AmA");
      assertEquals(7, characterCounter0.getNumLetters());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("{Rm&]");
      int int0 = characterCounter0.getNumOtherCharacters();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("0)>1\">$H:\"+n_3jIw<");
      int int0 = characterCounter0.getNumLetters();
      assertEquals(3, characterCounter0.getNumDigits());
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      // Undeclared exception!
      try { 
        characterCounter0.processString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ant_project_example.CharacterCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      characterCounter0.processString("0)>1\">$H:\"+n_3jIw<");
      int int0 = characterCounter0.getNumDigits();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      int int0 = characterCounter0.getNumLetters();
      assertEquals(0, characterCounter0.getNumOtherCharacters());
      assertEquals(0, characterCounter0.getNumDigits());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      int int0 = characterCounter0.getNumDigits();
      assertEquals(0, characterCounter0.getNumOtherCharacters());
      assertEquals(0, int0);
      assertEquals(0, characterCounter0.getNumLetters());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterCounter characterCounter0 = new CharacterCounter();
      int int0 = characterCounter0.getNumOtherCharacters();
      assertEquals(0, characterCounter0.getNumDigits());
      assertEquals(0, characterCounter0.getNumLetters());
      assertEquals(0, int0);
  }
}
